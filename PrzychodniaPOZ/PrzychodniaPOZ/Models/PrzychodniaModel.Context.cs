//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrzychodniaPOZ.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PrzychodniaPOZEntities : DbContext
    {
        public PrzychodniaPOZEntities()
            : base("name=PrzychodniaPOZEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Badanie> Badanie { get; set; }
        public virtual DbSet<Lekarz> Lekarz { get; set; }
        public virtual DbSet<Pacjent> Pacjent { get; set; }
        public virtual DbSet<Pracownik> Pracownik { get; set; }
        public virtual DbSet<Specjalizacja> Specjalizacja { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<WizytaBadanie> WizytaBadanie { get; set; }
        public virtual DbSet<WizytaLekarz> WizytaLekarz { get; set; }
    
        public virtual ObjectResult<pokazPacjent_Result> pokazPacjent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pokazPacjent_Result>("pokazPacjent");
        }
    
        public virtual int Rejestracja(string nazwisko, string imie, string adres, string telefon, string email, string pesel, string login, string haslo, string conf, ObjectParameter komunikat)
        {
            var nazwiskoParameter = nazwisko != null ?
                new ObjectParameter("nazwisko", nazwisko) :
                new ObjectParameter("nazwisko", typeof(string));
    
            var imieParameter = imie != null ?
                new ObjectParameter("imie", imie) :
                new ObjectParameter("imie", typeof(string));
    
            var adresParameter = adres != null ?
                new ObjectParameter("adres", adres) :
                new ObjectParameter("adres", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var peselParameter = pesel != null ?
                new ObjectParameter("pesel", pesel) :
                new ObjectParameter("pesel", typeof(string));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var hasloParameter = haslo != null ?
                new ObjectParameter("haslo", haslo) :
                new ObjectParameter("haslo", typeof(string));
    
            var confParameter = conf != null ?
                new ObjectParameter("conf", conf) :
                new ObjectParameter("conf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rejestracja", nazwiskoParameter, imieParameter, adresParameter, telefonParameter, emailParameter, peselParameter, loginParameter, hasloParameter, confParameter, komunikat);
        }
    }
}
